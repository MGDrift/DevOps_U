name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging  # Ejecuta el pipeline cuando haya cambios en staging

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: pip install -r backend/requirements.txt 

      - name: Run Tests
        run: pytest 

  docker:
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t drift12/todo-app:${{ github.ref == 'refs/heads/main' && 'latest' || 'staging' }} .
          docker push drift12/todo-app:${{ github.ref == 'refs/heads/main' && 'latest' || 'staging' }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    steps:
      - name: Deploy to Server
        env:
          SERVER_IP: ${{ github.ref == 'refs/heads/main' && secrets.SERVER_IP_PROD || secrets.SERVER_IP_STAGING }}
          MONGODB_URI: ${{ github.ref == 'refs/heads/main' && secrets.MONGODB_URI_PROD || secrets.MONGODB_URI_STAGING }}
        run: |
          ssh root@$SERVER_IP "
          export MONGODB_URI=$MONGODB_URI &&
          docker pull drift12/todo-app:${{ github.ref == 'refs/heads/main' && 'latest' || 'staging' }} &&
          docker-compose up -d"


  # ✅ build: Instala dependencias y ejecuta pruebas.
  # ✅ docker: Construye y sube la imagen Docker a Docker Hub.  
  # ✅ deploy: Extrae la imagen y la ejecuta en un servidor.
  
#comentario de prueba para hacer commit en vercel
#pussh para probar el despliegue en actions